<Window
    x:Class="FuzzyLogic.UI.Views.AuthView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:FuzzyLogic.UI.Controls"
    xmlns:converters="clr-namespace:FuzzyLogic.UI.Infrastructure.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dp="clr-namespace:FuzzyLogic.UI.Infrastructure.DP"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prop="clr-namespace:FuzzyLogic.UI.Properties"
    xmlns:vml="clr-namespace:FuzzyLogic.UI"
    Width="800"
    Height="400"
    AllowsTransparency="True"
    Background="Transparent"
    DataContext="{x:Static vml:ViewModelLocator.AuthViewModel}"
    MouseDown="Window_MouseDown"
    ResizeMode="NoResize"
    WindowStartupLocation="CenterScreen"
    WindowState="{Binding WindowState}"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="0,0,0,0"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF" />
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070" />
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Margin" Value="5,0" />
            <Setter Property="Width" Value="107" />
            <Setter Property="Height" Value="100" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <ControlTemplate.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </ControlTemplate.Resources>

                        <Grid
                            x:Name="templateRoot"
                            Background="Transparent"
                            SnapsToDevicePixels="True">

                            <Border
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                                <Border.Effect>
                                    <DropShadowEffect
                                        x:Name="shadowBorder"
                                        ShadowDepth="0"
                                        Color="Transparent" />
                                </Border.Effect>
                            </Border>

                            <Border
                                x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">

                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="40" />
                                    </Grid.RowDefinitions>

                                    <Image
                                        Grid.Row="0"
                                        Width="47"
                                        Height="47"
                                        Source="{Binding Path=(dp:ButtonProperties.Image), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}" />
                                    <TextBlock
                                        Grid.Row="1"
                                        Margin="0,0,0,1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontFamily="Century Gothic"
                                        FontSize="12"
                                        Text="{TemplateBinding ContentPresenter.Content}"
                                        TextAlignment="Center"
                                        TextWrapping="Wrap" />

                                </Grid>
                            </Border>

                            <Image
                                x:Name="doneImage"
                                Width="27"
                                Height="27"
                                Margin="-8"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                Source="{StaticResource DoneImage}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="border" Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="#FF1240A4" />
                                            <GradientStop Offset="1" Color="#FFFF1818" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="doneImage" Property="Visibility" Value="Visible" />
                            </Trigger>

                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="border" Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Offset="0" Color="#FF979494" />
                                            <GradientStop Offset="0.6" Color="#CCCBC7C7" />
                                            <GradientStop Offset="1" Color="#FF979494" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="doneImage" Property="Visibility" Value="Hidden" />
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="shadowBorder"
                                                Storyboard.TargetProperty="Color"
                                                To="#FF00B9FF"
                                                Duration="0:0:0.1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>

                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="shadowBorder"
                                                Storyboard.TargetProperty="Color"
                                                To="Transparent"
                                                Duration="0:0:0.1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="3"
                            CornerRadius="2"
                            SnapsToDevicePixels="true">

                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                                        </Trigger>

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush">
                                                <Setter.Value>
                                                    <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0,0.5" EndPoint="1,0.5">
                                                        <GradientStop Offset="0" Color="#FF1240A4" />
                                                        <GradientStop Offset="1" Color="#FFFF1818" />
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <Border.Triggers>

                                <EventTrigger RoutedEvent="MouseEnter">

                                    <BeginStoryboard>

                                        <Storyboard RepeatBehavior="Forever">

                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.StartPoint)">
                                                <EasingPointKeyFrame KeyTime="0:0:0.4" Value="0.5,0" />
                                            </PointAnimationUsingKeyFrames>

                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.EndPoint)">
                                                <EasingPointKeyFrame KeyTime="0:0:0.4" Value="0.5,1" />
                                            </PointAnimationUsingKeyFrames>

                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.StartPoint)">
                                                <EasingPointKeyFrame KeyTime="0:0:0.6" Value="1,0.5" />
                                            </PointAnimationUsingKeyFrames>

                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.EndPoint)">
                                                <EasingPointKeyFrame KeyTime="0:0:0.6" Value="0,0.5" />
                                            </PointAnimationUsingKeyFrames>

                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.StartPoint)">
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,1" />
                                            </PointAnimationUsingKeyFrames>

                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.EndPoint)">
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0" />
                                            </PointAnimationUsingKeyFrames>

                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.StartPoint)">
                                                <EasingPointKeyFrame KeyTime="0:0:1.5" Value="0,0.5" />
                                            </PointAnimationUsingKeyFrames>

                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.EndPoint)">
                                                <EasingPointKeyFrame KeyTime="0:0:1.5" Value="1,0.5" />
                                            </PointAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </BeginStoryboard>

                                </EventTrigger>

                            </Border.Triggers>

                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border Background="White" CornerRadius="20,0,0,20">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="325" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock
                    Grid.Row="0"
                    Margin="0,25,0,0"
                    HorizontalAlignment="Center"
                    FontFamily="Candara Light"
                    FontSize="16"
                    Text="{x:Static prop:Resources.SelectUserTypeTitle}" />

                <controls:WindowControlButtons
                    Grid.Row="0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    CloseCommand="{Binding ExitCommand}"
                    ShowExpanderButton="False"
                    SkipCommand="{Binding SkipCommand}" />

                <StackPanel Grid.Row="1">

                    <!--  User Type Buttons  -->
                    <WrapPanel
                        Margin="0,10,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top">

                        <RadioButton
                            Grid.Row="0"
                            Grid.Column="0"
                            dp:ButtonProperties.Image="{StaticResource AdminPlateImage}"
                            Content="{x:Static prop:Resources.AdminTitle}"
                            IsChecked="True" />

                        <RadioButton
                            Grid.Row="0"
                            Grid.Column="1"
                            dp:ButtonProperties.Image="{StaticResource ScientistImage}"
                            Content="{x:Static prop:Resources.KnowledgeEngineerTitle}" />

                        <RadioButton
                            Grid.Row="1"
                            Grid.Column="0"
                            dp:ButtonProperties.Image="{StaticResource ResearcherImage}"
                            Content="{x:Static prop:Resources.ResearcherTitle}"
                            IsChecked="True" />

                        <RadioButton
                            x:Name="RegistrationButton"
                            Grid.Row="1"
                            Grid.Column="1"
                            dp:ButtonProperties.Image="{StaticResource NewUserImage}"
                            Content="{x:Static prop:Resources.AddUserTitle}" />

                    </WrapPanel>

                </StackPanel>

                <!--  Auth Part  -->
                <StackPanel
                    Grid.Row="2"
                    Width="300"
                    VerticalAlignment="Center">

                    <TextBlock
                        Margin="0,0,0,10"
                        FontFamily="Century Gothic"
                        FontSize="24">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{x:Static prop:Resources.AuthTitle}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsChecked, ElementName=RegistrationButton}" Value="True">
                                        <Setter Property="Text" Value="{x:Static prop:Resources.RegistrationTitle}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <controls:CustomTextBox
                        Height="32"
                        HintTextSize="14"
                        Icon="{StaticResource LoginImage}"
                        TextFontSize="16" />

                    <controls:CustomPasswordBox
                        x:Name="pass1"
                        Height="32"
                        HintTextSize="14"
                        Icon="{StaticResource PasswordImage}"
                        TextFontSize="16" />

                    <controls:CustomPasswordBox
                        x:Name="pass2"
                        Height="32"
                        HintTextSize="14"
                        Icon="{StaticResource PasswordImage}"
                        TextFontSize="16">

                        <controls:CustomPasswordBox.Style>
                            <Style TargetType="controls:CustomPasswordBox">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsChecked, ElementName=RegistrationButton}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:CustomPasswordBox.Style>
                    </controls:CustomPasswordBox>

                    <Button
                        Width="300"
                        Margin="0,15,0,0"
                        Background="#FF3C7FB1"
                        Content="{x:Static prop:Resources.LogInTitle}"
                        FontFamily="MS Reference Sans Serif"
                        FontSize="20"
                        Foreground="White">
                        <Button.Style>
                            <Style BasedOn="{StaticResource CustomButtonStyle}" TargetType="Button">
                                <Setter Property="Command" Value="{Binding SignInCommand}" />
                                <Setter Property="CommandParameter">
                                    <Setter.Value>
                                        <Binding ElementName="pass1" Converter="{converters:PasswordBoxToPasswordConverter}" />
                                    </Setter.Value>
                                </Setter>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=RegistrationButton, Path=IsChecked}" Value="True">
                                        <Setter Property="Command" Value="{Binding RegistrationCommand}" />
                                        <Setter Property="CommandParameter">
                                            <Setter.Value>
                                                <MultiBinding Converter="{converters:PasswordBoxToPasswordsConverter}">
                                                    <Binding ElementName="pass1" />
                                                    <Binding ElementName="pass2" />
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                </StackPanel>

            </Grid>

            <Border
                Grid.Column="0"
                ClipToBounds="True"
                CornerRadius="20,0,0,20">
                <Border.Effect>
                    <BlurEffect Radius="5" />
                </Border.Effect>

                <Border.Background>
                    <ImageBrush ImageSource="{StaticResource AuthBackImage}" Stretch="UniformToFill" />
                </Border.Background>
            </Border>

            <TextBlock
                Margin="0,316,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                FontFamily="Leelawadee UI"
                FontSize="48"
                FontWeight="Bold"
                Foreground="White"
                RenderTransformOrigin="0.5,0.5"
                Text="Fuzzy Logic">
                <TextBlock.Effect>
                    <DropShadowEffect Color="Black" />
                </TextBlock.Effect>
            </TextBlock>
        </Grid>
    </Border>
</Window>
